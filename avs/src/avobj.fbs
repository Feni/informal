namespace Avsio;

enum AVObjType:byte {
    Obj = 0,
    Str = 1,
//    AVClass = 2,
//    AVByteArray = 4,
}


// table AVClass {
//     id: uint;
//     superclass: AVClass;
// }

// table AVStr {
//     // TODO: obj
//     length:uint; // TODO: Is this needed?
//     str:string;
// }

// table AVByteArray {
//     length:uint;
//     arr:[ubyte];
// }

// table AVFunc {
//
//}

// Used for return type back to system
struct SizedPtr {
    length: uint;
    ptr: uint;
}

// Flatbuffers encourage optional fields packed into a table
// obj_type is always present. The presence of the other fields depend on type.
table AVObj {
  avtype: AVObjType;
  avclass: uint;     // For objects of obj_type = Obj
  avhash: ulong;
  length: uint;
  values: [ulong];   // Primitive types or boxed refs to other objects.
  avstr: string;
  avbytes: [ubyte];
  avobjs: [AVObj];   // Used for the root heap
}

// AV List Obj

root_type AVObj;
