apiVersion: extensions/v1beta1
kind: Ingress
metadata:
    name: aa-ngx-ingress
    annotations:
#        kubernetes.io/ingress.allow-http: "false"
#        certmanager.k8s.io/acme-http01-edit-in-place: "true"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
        certmanager.k8s.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/rewrite-target: /
    namespace: default
spec:
    # Default backend
    backend:
      serviceName: aasm-service
      servicePort: aasm-port
    rules:
    - host: appassembly.io
      http:
        paths:
        - path: /
          backend:
            serviceName: appy-service
            servicePort: appy-port
    - http:
        paths:
        - backend:
            serviceName: aasm-service
            servicePort: aasm-port
    tls:
      - hosts:
        - appassembly.io
        secretName: appassembly-io-tls
      - hosts:
        - '*.aasm.app'
        secretName: aasm-app-tls

---
# Based on https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml
# Disabled os node-selector
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      # wait up to five minutes for the drain of connections
      terminationGracePeriodSeconds: 300
      serviceAccountName: nginx-ingress-serviceaccount
    #   nodeSelector:
    #     kubernetes.io/os: linux
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --ingress-class=nginx
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown

---
# https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/cloud-generic.yaml
kind: Service
apiVersion: v1
metadata:
    name: ngx-service
    namespace: ingress-nginx
    labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
    # annotations:
    #    cloud.google.com/app-protocols: '{"https":"HTTPS","http":"HTTP"}'
    #     cloud.google.com/neg: '{"ingress": true}' # Creates a NEG after an Ingress is created
spec:
    type: LoadBalancer
    externalTrafficPolicy: Local
    # loadBalancerIP: 35.241.35.111
    selector:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
    ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: http
        - name: https
          port: 443
          protocol: TCP
          targetPort: https
    
---

# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: aa-lb
#   namespace: default
#   annotations:
#     kubernetes.io/ingress.class: "gce"
#     kubernetes.io/ingress.global-static-ip-name: "aa-public"
#     ingress.kubernetes.io/rewrite-target: /
# spec:
#   backend:
#     serviceName: ngx-service
#     servicePort: http
#   tls:
#     - hosts:
#       - appassembly.io
#       secretName: appassembly-io-tls
#     - hosts:
#       - '*.aasm.app'
#       secretName: aasm-app-tls
  
# ---
